from aiogram import Router, F
from aiogram.filters import Command, CommandObject
from aiogram.types import Message
from keyboards import inline, reply, builders, fabrics
from data.subloader import get_json



router = Router()
smiles = [
        ["üò¶","–ù–∏ –ø–æ–Ω—è–ª :_)"],
        ["üêµ", "–¢—ã –º–∞–∫–∞–∫–∞"],
        [ "üòí",  "–ù—É —ë–º–∞—ë"],
        ["üòã", "–í–∫—É—Å–Ω—è—à–∫–∞ü§Ø"]
]

@router.message(F.text.lower().in_(['–ü—Ä–∏–≤–µ—Ç', '—Ö–∞–π', 'Hello']))
async def hello(message: Message):
    await message.reply('–ü—Ä–∏–≤–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ–µ—Ç!')

@router.message()
async def sil(message: Message):
    msg = message.text.lower()

    if msg == '—Å—Å—ã–ª–∫–∏':
        await message.answer('–í–æ—Ç –≤–∞—à–∏ —Å—Å—ã–ª–∫–∏', reply_markup=inline.lin_kb)
    elif msg == 'c–ø–µ—Ü. –∫–Ω–æ–ø–∫–∏':
        await message.answer(f'–°–ø–µ—Ü. –∫–Ω–æ–ø–∫–∏', reply_markup=reply.sp_kb)
    elif msg == '–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä':
        await message.answer(f'–í–æ—Ç –≤–∞—à –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä', reply_markup=builders.calc())
    elif msg == '—Å–º–∞–π–ª–∏–∫–∏':
        await message.answer(f'{smiles[0][0]} <b>{smiles[0][1]}</b>', reply_markup=fabrics.paginator())